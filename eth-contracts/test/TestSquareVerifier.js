// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
// the verifier.sol file was copied/renamed into the contracts directory
const Verifier = artifacts.require("Verifier");
const Proof = require("../../zokrates/code/square/proof");

contract("TestSquareVerifier", (accounts) => {


    describe('TestSquareVerifier', function () {
        before(async function () {
            this.contract = await Verifier.new({ from: accounts[0] });
        });

        // Test verification with correct proof
        // - use the contents from proof.json generated from zokrates steps
        it("Correct proof test", async function () {
            let isVerified = await this.contract.verifyTx.call(Proof.proof, Proof.inputs);
            assert.equal(isVerified, true, "Unable to verify");
        });

        // Test verification with incorrect proof
        it("Incorrect proof test", async function () {
            let isVerified = await this.contract.verifyTx.call(Proof.proof, ["0x0000000000000000000000000000000000000000000000000000000000000009", "0x0000000000000000000000000000000000000000000000000000000000000004"]);
            assert.equal(isVerified, false, "Failure expected");
        });
    });
});
